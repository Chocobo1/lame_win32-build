# Notes:
# - Minimal appveyor.yml file is an empty file. All sections are optional.
# - Indent each level of configuration with 2 spaces. Do not use tabs!
# - All section names are case-sensitive.
# - Section names should be unique on each level.

#---------------------------------#
#  general configuration          #
#---------------------------------#

# version format
version: '{branch}-{build}'

# Do not build on tags (GitHub only)
skip_tags: true

# avoid malicious attempt via pull requests
branches:
  only:
    - stable


#---------------------------------#
#  environment configuration      #
#---------------------------------#

# environment variables
# build system info: https://www.appveyor.com/docs/windows-images-software/
os: Visual Studio 2022

environment:
  REPO_DIR: &REPO_DIR c:\project  # directory created by appveyor

  NASM_URL: https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win64/nasm-2.15.05-win64.zip

  LAME_LATEST_URL: https://svn.code.sf.net/p/lame/svn/trunk
  LAME_STABLE_URL: https://sourceforge.net/projects/lame/files/lame/3.100/lame-3.100.tar.gz

  LAME_SOL_FILE: vc9_lame.sln
  LAME_MSBUILD_CMD_X86: /maxcpucount /target:"app lame" /property:Configuration=ReleaseNASM,Platform=Win32
  LAME_MSBUILD_CMD_X64: /maxcpucount /target:"app lame" /property:Configuration=Release,Platform=x64

# clone directory
clone_folder: *REPO_DIR


#---------------------------------#
#  build configuration            #
#---------------------------------#

# scripts to run before build
install:
  - CD \
  - appveyor DownloadFile "%NASM_URL%" -FileName "c:\nasm.zip"
  - 7z x "nasm.zip" > nul
  - MOVE nasm-* NASM
  - SET PATH=%PATH%;c:\NASM;
  - nasm -v

before_build:
  # download code according to branch name
  - CD "%REPO_DIR%"
  - ECHO "%APPVEYOR_REPO_BRANCH%"
  - IF "%APPVEYOR_REPO_BRANCH%" == "master" (
      svn checkout "%LAME_LATEST_URL%" "lame-svn" &&
      MOVE "lame-svn\lame" "lame_src"
    )
  - IF "%APPVEYOR_REPO_BRANCH%" == "stable" (
      appveyor DownloadFile "%LAME_STABLE_URL%" -FileName "%REPO_DIR%\lame.tar.gz" &&
      7z x "lame.tar.gz" > nul && 7z x "*.tar" > nul && DEL lame* &&
      MOVE "lame*" "lame_src"
    )

  # copy new project to code base
  - MOVE "vc_solution_" "%REPO_DIR%\lame_src"

build_script:
  # compile
  - msbuild "%REPO_DIR%\lame_src\vc_solution_\%LAME_SOL_FILE%" %LAME_MSBUILD_CMD_X86%
  - msbuild "%REPO_DIR%\lame_src\vc_solution_\%LAME_SOL_FILE%" %LAME_MSBUILD_CMD_X64%

after_build:
  # prepare for artifacts packaging
  - CD "%REPO_DIR%"
  - MKDIR "win32" "x64"
  - copy "%REPO_DIR%\lame_src\output\ReleaseNASM\lame.exe" "win32"
  - copy "%REPO_DIR%\lame_src\output\Release\lame.exe" "x64"
  - 7z a -mx9 "lame.7z" "Readme.md" "win32" "x64"
  - 'powershell -Command "& { $hash = (Get-FileHash -Algorithm SHA256 "lame.7z").hash.ToString().toLower(); Write-Host $hash " *lame.7z"; }" > "lame.7z.sha256"'


#---------------------------------#
#  tests configuration            #
#---------------------------------#

# to disable automatic tests
test: off


#---------------------------------#
#  artifacts configuration        #
#---------------------------------#

artifacts:
  - path: lame.7z
    name: exe
  - path: lame.7z.sha256
    name: checksum
